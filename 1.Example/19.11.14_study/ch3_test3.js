// 함수 안에서 값을 반환할 때 새로운 함수를 만들어 반환하는 방법
function add(a,b,callback){
    var result = a + b;
    console.log('여기 언제와?1');
    callback(result);
    console.log('여기 언제와?3');
    var history = function(){
        return a + '+' + b + '=' + result;
    };
    /*console.log('너 타입이 뭐니',typeof(history)); 에러로 계속 history가 함수가 아니라고 해서 출력 해볼려고 했는데 결과적으로 여기까지 오지도 않고 오류가 났다.. 
    당연한게 21번라인에서 이미 함수가 아니기 때문에 호출이 안되서 출력이 안됬다.*/
   return history;
}

var add_history = add(10,10,function(result){     // add함수에 파라미터로 result를 보내는데 왜 add함수 호출부분에서 add함수안에 선언된 result변수를 파라미터로 보내는 거지??
    console.log('여기 언제와?2');      
    console.log('파라미터로 전달된 콜백 함수 호출됨.');
    console.log('더하기 (10,10)의 결과 : %d',result);
});

console.log('결과 값으로 받은 함수 실행 결과 : ' + add_history());
/* 여기서 add_history is not a function오류가 나서 한참 해메다가 겨우 찾았는데... 이 예제에서 add함수의 형태가 (a,b,callback)이 처럼 되어있는데...
 지금은 지웠지만 위에 객체에 속성으로 add함수를 추가하는 코드가 이게 충돌이나서 디버깅해본 결과 add함수가 (a,b)의 형태로 되어있더라... 
 다른 예제 에서는 var변수를 같은 이름으로 여러번 써도 괜찮았는데 함수는 오류가 났다. 이유는 정확히 모르겠지만 앞으로 예제에서 사용하는 변수나 함수 객체명은 각각 다르게 사용하도록하자.... 
 +추가 이러한 의문점을 15번라인의 의문점을 해결하다가 알게된 것인데 호이스팅이라는 기능 때문인것 같다. 자세한건 http://www.nextree.co.kr/p7363/ 에서 호이스팅부분에서 알아보자.*/
 
 console.log('add_history()의 타입은 뭘까?',typeof(add_history()));/*  아까 오류 났을 때는 함수가 아니라고 오류가 났는데 결국 스트링이네? 아 함수이지만 리턴값이 스트링이라서 그런 건가??
 아 그렇지... add_history()의 리턴 값이 스트링이니까 당연히 스트링으로 나오지... 헤헷*/

/* 실행 결과
여기 언제와?1
여기 언제와?2
파라미터로 전달된 콜백 함수 호출됨.
더하기 (10,10)의 결과 : 20
여기 언제와?3
결과 값으로 받은 함수 실행 결과 : 10+10=20

이번 코드로 콜백함수의 진행 순서를 여기 언제와 1,2,3을 통해 알아냈다.
41번 라인에서 add함수를 호출하면서 파라미터로 10,10,무명함수를 전달인자로 보내게되면 add함수가 정의된 27번 라인으로 가서 a+b한 값을 result에 할당하고
여기 언제와?1을 출력해준 후 result값을 무명함수인 callback함수의 전달인자로 보내게 되면 여기언제와?2가 출력이 되고 44번 라인까지 출력하고나면 callback함수(무명함수1)가 종료가 된다.
그리고 다시 add함수로 돌아와 여기 언제와?3가 출력되고나서 history 변수에 무명함수2를 할당하고 history함수를 리턴해 add_history에 할당한 후 마지막 출력인 add_history()함수를 호출해서
무명함수2의 리턴값을 출력해준다. 
순서로 봤을 땐 무명함수1의 파라미터로 보내는 것이 아닌 add함수안에서 30번 라인의 callback함수에서 호출하는 것인가?
해결! 40번라인의 무명함수는 선언부분이라서 매개변수로 어떤 이름을 써도 상관이 없던 겨였다....40번라인에 add함수를 호출하는거라서 무명함수를 파라미터로 보낸다고 생각했었는데 
설명을 들어보니 선언부분이었던 것이다..무명함수의 호출 부분은 30번 라인이다. */
