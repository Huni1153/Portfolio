● 노드(Node.js)는 자바스크립트를 이용해서 서버를 만들 수 있는 개발 도구이다.

● 왜 노드를 사용해야 하는 것인가?
    - 노드는 2009년에 라이언 달 이라는 사람이 개발했는데 그 당시 웹 서버에 파일을 업로드할 때 업로드가 끝나기 전까지 다른 작업을 할 수 없었다.
    이러한 문제점을 해결하기위해 노드가 개발되었는데 하나의 요청이 끝날때 까지 기다리지 않고 다른 요청을 동시에 처리할 수 있는 
    비동기 입출력(논블로킹 입출력, Non-Bloking IO)방식을 적용했다.

● 노드의 대표적인 특징
    1. 비동기 입출력
    2. 이벤트 기반 입출력
    3. 노드의 모듈
    4. 자바스크립트 사용

# Callback Function
    - 자바스크립트에서는 변수에 함수를 할당할 수 있다. 따라서 변수에 할당된 함수의 다른 함수의 파라미터로 전달할 수 있다.
    이렇게 파라미터로 전달된 함수를 다른 함수의 내부에서 호출하는 것이 콜백 함수이다.
 
● 전역 객체(Global Object)란?
    - 자바스크립트에서는 다른 언어들처럼 함수를 만들어 함수안에서 변수를 선언하여 사용할 수 있다.
    그런데 함수 안에서 선언한 변수는 그 함수 안에서만 유요하다. 즉, 그 함수 안에서만 사용할 수 있다.
    이와 달리 전역 객체는 함수 안과 밖에서 모두 사용할 수 있도록 범위를 제한하지 않는 객체이다. 따라서 코드의 어느 부분에서나 사용할 수 있다.

● exports와 module.expots의 차이  ※ 더 알아보자!!!
    - exports - 속성을 추가할 수 있어 여러 개의 변수나 함수를 각각의 속성으로 추가할 수 있다.
    - moudule.exports - 하나의 변수나 함수 또는 객체를 직잡 할당한다. 일반적으로는 객체를 그대로
    할당하며, 이렇게 할당한 객체 안에 넣어 둔 변수나 함수를 메인 파일에서도 사용할 수 있다.

● require()함수 
    - 모듈을 불러올때 사용 하는 함수로 파라미터로 모듈 파일의 이름을 전달하는데 파일 이름 전체를 다 사용하지 않고 
    확장자를 뺀 파일의 이름만 파라미터로 보낸다. 파일이름에 ./를 붙인 것은 상대 패스로 지정했다는걸 뜻한다.
    하지만 해당 파일이 없다면 폴더 이름을 찾아 그안에 있는 파일을 불러들이기도 한다.
    에를 들면 require('./sum')를 호출했는데 해당 파일이 없다면 sum이라는 폴더가 있는지 확인하고 만약 sum이라는 폴더가 있다면
    그 안에 있는 index.js파일을 불러온다.
    즉, sum폴더를 만들고 그안에 index.js를 만들고 index.js 파일안에 sum에 해당하는 모듈 기능을 넣어두면 require('./sum')코드로 모듈 파일을 불러올 수 있다.
